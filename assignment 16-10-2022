Question For a = 60 , b = 13 compare the numbers using bitwise operators like AND, OR, XOR, NOT.

01. Which of the following statements assigns the value 25 to the variable x in Python:
1. x ← 25
2. x = 25
3. x := 25
4. int x = 25
5. x << 25

ANS--> x = 25
 
02. In Python, a variable may be assigned a value of one type, and then later assigned a value of a different type:
1. False
2. True

ANS--> True

03. Which one of the following is the correct way of declaring and initializing a variable, x with the value 7?
1. int x
2. x=7
3. int x=7
4. x=7
5. declare x=7

ANS--> x=7
 
 
04. What will be the output of statement 2**2**2**2
1. 16
2. 256
3. 32768
4. 65536

ANS--> 65536



05. Which of the following statement is False?
1. Variable names can be arbitrarily long.
2. They can contain both letters and numbers.
3. Variable name can begin with underscore.
4. Variable name can begin with number.

ANS--> Variable name can begin with number.

06. What is the output of the following code: print 9//2
1. 4
2. 4.5
4. 0
Error

ANS--> 4

07. Which of the following is not a valid variable name in Python?
1. _var
2. var_name
3. var11
4. 5var

ANS--> 5var
 
08. What is the maximum length of an identifier in python?
1. 32
2. 31
3. 63
4. None of the above

ANS--> None of the above

09. Which of the following declarations is incorrect?
1. None Of the below
2. _x = 2
3. __x = 3
4. __xyz__ = 5

ANS--> None Of the below

10. What is the result of round(0.5) – round(-0.5)?
1. 1.0
2. 2.0
3. 0
4. None Of the above


ANS--> 0



11. In Python, a variable must be declared before it is assigned a value:
1. True
2. False

ANS--> False

 
 
12. Why does the name of local variables start with an underscore discouraged?
1. To identify the variable
2. It confuses the interpreter
3. It indicates a private variable of a class
4. None of these

ANS--> It indicates a private variable of a class

 
13. Which of the following will run without errors?
1. round(75.8)
2. round()
3. round(5352.898,9,5)
4. round(6463.123,2,6)

ANS--> round(75.8)


14. Which of the following is a valid variable?
1. var@
2. 32var
3. in
4. abc_x

ANS--> abc_x

15. Is Python case sensitive when dealing with identifiers?
1. Yes
2. No
3. Machine dependent
4. None of the above

ANS--> Yes
